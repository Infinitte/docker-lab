version: "2.3"

services:
  traefik:
    # The official v2 Traefik docker image
    image: traefik:latest
    container_name: traefik
    ports:
      # The HTTP port
      - "81:80"
      # The HTTPs port
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    extra_hosts:
      - host.docker.internal:172.17.0.1
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.rule=Host(`traefik.kabble.duckdns.org`)
      - traefik.http.routers.traefik.tls=true
      - traefik.http.routers.traefik.tls.certresolver=myresolver
      - traefik.http.routers.traefik.middlewares=authelia@docker
      - traefik.enable=true
      - traefik.http.services.traefik.loadbalancer.server.port=8080
    volumes:
      # So that Traefik can listen to the Docker events
      - /home/kabble/code/docker-lab/data/traefik:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock
      #- /etc/letsencrypt:/etc/letsencrypt
    command:
      - --api.insecure=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker.endpoint=tcp://192.168.1.15:2375
      - --providers.file.filename=/etc/traefik/tls.yml
      #- --providers.docker.exposedByDefault=false
      - --serversTransport.insecureSkipVerify=true
      - --entrypoints.websecure.http.tls.certresolver=myresolver
      - --entrypoints.websecure.http.tls.domains[0].main=kabble.duckdns.org
      - --entrypoints.websecure.http.tls.domains[0].sans=*.kabble.duckdns.org
      - --certificatesresolvers.myresolver.acme.dnschallenge=true
      - --certificatesresolvers.myresolver.acme.dnschallenge.provider=duckdns
      #- --certificatesresolvers.myresolver.acme.dnschallenge.delaybeforecheck=60
      #- --certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.myresolver.acme.storage=/etc/traefik/acme/acme.json
      - --certificatesresolvers.myresolver.acme.email=lorenzo.ortiz@gmail.com
      - --certificatesresolvers.myresolver.acme.dnsChallenge.disablePropagationCheck=true
      #- --certificatesresolvers.myresolver.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Madrid
      - "DUCKDNS_TOKEN_FILE=/run/secrets/duckdns_token"
    secrets:
      - duckdns_token
    restart: unless-stopped
    networks:
      - main_default

  ntfy:
    image: binwiederhier/ntfy                          # Specifies the ntfy Docker image.
    container_name: ntfy                               # Names the container for easier management.
    command:
      - serve                                          # Runs the ntfy server.
    environment:
      - TZ=Europe/Madrid
      - NTFY_ENABLE_LOGIN=true
      - NTFY_BASE_URL=https://ntfy.kabble.duckdns.org
      - NTFY_UPSTREAM_BASE_URL=https://ntfy.sh
    user: 1000:1000                                    # Optional: Replace with your user/group or UID/GID.
    labels:
      - traefik.enable=true
      - traefik.http.routers.ntfy.entrypoints=websecure
      - traefik.http.routers.ntfy.rule=Host(`ntfy.kabble.duckdns.org`)
      - traefik.http.routers.ntfy.tls=true
      - traefik.http.routers.ntfy.tls.certresolver=myresolver
      - traefik.http.services.ntfy.loadbalancer.server.port=80
    volumes:
      - /var/cache/ntfy:/var/cache/ntfy                # Persists cache data.
      - /home/kabble/code/docker-lab/data/ntfy:/etc/ntfy                            # Stores ntfy configuration files.
    healthcheck:                                       # Optional: Health check to ensure ntfy is running properly.
        test: ["CMD-SHELL", "wget -q --tries=1 http://localhost:80/v1/health -O - | grep -Eo '\"healthy\"\\s*:\\s*true' || exit 1"]
        interval: 60s                                  # Runs the health check every 60 seconds.
        timeout: 10s                                   # Timeout for the health check is 10 seconds.
        retries: 3                                     # If the health check fails, retries 3 times.
        start_period: 40s                              # Waits 40 seconds before starting the first check.
    networks:
      - main_default
    restart: unless-stopped

  # watchtower:
  #   image: containrrr/watchtower
  #   container_name: watchtower
  #   labels:
  #     - traefik.enable=false
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   env_file:
  #     - /opt/docker/.secrets/watchtower/container-vars.env
  #   command: --label-enable
  #   restart: unless-stopped
  #   networks:
  #     - main_default

  authelia:
    image: authelia/authelia
    container_name: authelia
    volumes:
      - /home/kabble/code/docker-lab/data/authelia:/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.authelia.rule=Host(`auth.kabble.duckdns.org`)
      - traefik.http.routers.authelia.entrypoints=websecure
      - traefik.http.routers.authelia.tls=true
      - traefik.http.routers.authelia.tls.certresolver=myresolver
      - traefik.http.middlewares.authelia.forwardAuth.address=http://authelia:9092/api/authz/forward-auth
      - traefik.http.middlewares.authelia.forwardauth.trustForwardHeader=true
      - traefik.http.middlewares.authelia.forwardauth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email
      - traefik.http.services.authelia.loadbalancer.server.port=9092
    ports:
      - 9092:9092
    restart: unless-stopped
    environment:
      - TZ=Europe/Madrid
    healthcheck:
      disable: true
    networks:
      - main_default

  heimdall:
    image: lscr.io/linuxserver/heimdall:latest
    container_name: heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Madrid
    volumes:
      - /home/kabble/code/docker-lab/data/heimdall:/config
    ports:
      - 8002:80
      - 8443:443
    labels:
      - traefik.http.routers.heimdall.entrypoints=websecure
      - traefik.http.routers.heimdall.rule=Host(`heimdall.kabble.duckdns.org`)
      - traefik.http.routers.heimdall.tls=true
      - traefik.http.routers.heimdall.tls.certresolver=myresolver
      - traefik.http.routers.heimdall.middlewares=authelia@docker
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped
    networks:
      - main_default

secrets:
  # db_password:
  #   file: /opt/docker/.secrets/mariadb/db_password.txt
  # db_root_password:
  #   file: /opt/docker/.secrets/mariadb/db_root_password.txt
  duckdns_token:
    file: /home/kabble/code/docker-lab/data/.secrets/traefik/duckdns_token.txt
  # telegram_token:
  #   file: /opt/docker/.secrets/telegram/telegram_token.txt
  # pihole_password:
  #   file: /opt/docker/.secrets/pihole/password.tx

networks:
  main_default:
    external: true